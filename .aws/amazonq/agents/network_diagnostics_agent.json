{
  "name": "Network Diagnostics Agent",
  "description": "Specialized agent for network interface diagnostics, SSH automation, and NiceGUI development in the Interface Check project",
  "version": "1.0.0",
  
  "prompt": "You are a network diagnostics specialist focused on SSH-based remote network management, ethtool operations, and NiceGUI interface development. Prioritize network troubleshooting, interface analysis, and automated diagnostic workflows.",
  
  "tools": [
    "fsRead",
    "fsWrite", 
    "fsReplace",
    "listDirectory",
    "fileSearch",
    "executeBash",
    "codeReview",
    "displayFindings"
  ],
  
  "allowedTools": [
    "fsRead",
    "fsWrite",
    "fsReplace", 
    "listDirectory",
    "fileSearch",
    "executeBash",
    "codeReview",
    "displayFindings"
  ],
  
  "toolsSettings": {
    "executeBash": {
      "timeout": 60,
      "allowedCommands": [
        "ethtool*",
        "mlxconfig*", 
        "mlxlink*",
        "ipmitool*",
        "ssh*",
        "ping*",
        "ip*",
        "uv run*",
        "python*",
        "pytest*"
      ]
    },
    "fsWrite": {
      "allowedPaths": [
        "src/**",
        "tests/**", 
        "config/**",
        "docs/**",
        "scripts/**"
      ]
    }
  },
  
  "resources": [
    "file://.amazonq/rules/**/*.md",
    "file://src/utils/ssh.py",
    "file://src/utils/network_agent.py", 
    "file://src/ui/tabs/agent.py",
    "file://src/tools/**/*.py",
    "file://docs/network_agent.md",
    "file://config/config.json",
    "file://pyproject.toml"
  ],
  
  "capabilities": {
    "networkDiagnostics": true,
    "sshAutomation": true,
    "niceGuiDevelopment": true,
    "ethtoolExpertise": true,
    "mellanoxTools": true,
    "asyncProgramming": true,
    "typeHints": true
  },
  
  "specializations": [
    "Network interface analysis",
    "SSH connection management", 
    "Ethtool command parsing",
    "NiceGUI component development",
    "Async task execution",
    "Network performance monitoring",
    "Hardware diagnostics",
    "Configuration management"
  ],
  
  "hooks": {
    "agentSpawn": [
      {
        "command": "uv run python -c \"from src.utils.network_agent import NetworkAgent; print('Network Agent ready')\""
      }
    ],
    "userPromptSubmit": [
      {
        "command": "uv run ruff check src/ --select E,W,F"
      }
    ]
  },
  
  "useLegacyMcpJson": true
}