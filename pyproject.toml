[project]
name = "interface-check"
version = "0.1.0"
description = "Python interface analyzer project"
authors = [{ name = "Mattias Keva", email = "mattias.keva@gmail.com" }]
readme = "README.md"
requires-python = ">=3.13"
license = { text = "MIT" }
dependencies = [
    "pydantic",
    "pydantic-settings",
    "keyboard>=0.13.5",
    "nicegui==2.24.2",
    "pip-licenses>=5.0.0",
    "paramiko>=4.0.0",
    "python-dotenv>=1.1.1",
    "plotly>=6.3.1",
    "psutil>=7.1.0",
    "pympler>=1.1",
    "pandas>=2.3.3",

]

[dependency-groups]
dev = [
    "ruff",
    "mypy",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "types-paramiko>=4.0.0.20250822",
]

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # Performance optimizations
    "PERF203", # try-except in loop can be slow
    "PERF401", # manual list comprehension can be slow
    #### modules
    "ANN", # flake8-annotations
    "COM", # flake8-commas
    "C90", # mccabe complexity
    "DJ",  # django
    "EXE", # flake8-executable
    "T10", # debugger
    "TID", # flake8-tidy-imports

    #### specific rules
    "D100",   # ignore missing docs
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D200",
    "D205",
    "D212",
    "D400",
    "D401",
    "D415",
    "E402",   # false positives for local imports
    "E501",   # line too long
    "TRY003", # external messages in exceptions are too verbose
    "TD002",
    "TD003",
    "FIX002", # too verbose descriptions of todos
    "EM102",
    "S101",
    "PLR2004", # magic values
    "G004",    # f-string in logging
    "FURB140", # itertools.starmap
    "RET504",  # unnecessary assignment before return
    "SIM108",  # ternary operator
]
fixable = ["ALL"]
unfixable = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    ".ui",
    "__pycache__",
    ".env",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["src"]

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.black]
line-length = 120
target-version = ["py313"]
skip-string-normalization = true
include = "\\.pyi?$"
exclude = "(\\.bzr|\\.direnv|\\.eggs|\\.git|\\.git-rewrite|\\.hg|\\.ipynb_checkpoints|\\.mypy_cache|\\.nox|\\.pants\\.d|\\.pyenv|\\.pytest_cache|\\.pytype|\\.ruff_cache|\\.svn|\\.tox|\\.venv|\\.vscode|__pypackages__|_build|buck-out|build|dist|node_modules|site-packages|venv|\\.ui|__pycache__|\\.env)"

[tool.mypy]
python_version = "3.13"
strict = true

[tool.pytest.ini_options]
addopts = "-ra --cov=src --cov-report=html"
testpaths = ["tests"]
